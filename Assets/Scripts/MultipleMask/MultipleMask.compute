
#pragma kernel GetMask


RWTexture2D<float4> Result;
int texResolution;
int boardSize;

RWBuffer<float> alpha;
RWBuffer<int> boardIndexes;


void AddMask(uint index, uint boardIndex)
{
    uint posX = boardIndex % boardSize;
    uint posY = (boardIndex - posX) / boardSize;
    uint startX = posX * 100 - 25;
    uint startY = posY * 100 - 25;

    for(int i = 0; i < 150; ++i)
        for(int j = 0; j < 150; ++j)
        {
            float value = Result[uint2(startX + i, startY + j)].a + alpha[22500 * index + i + j * 150];
            Result[uint2(startX + i, startY + j)] = float4(1, 1, 1, value);
        }
}

void AddMask2()
{
    
    uint startX =  - 25;
    uint startY = - 25;

    for (int i = 0; i < 150; ++i)
        for (int j = 0; j < 150; ++j)
        {
            float value = Result[uint2(startX + i, startY + j)].a + alpha[i + j * 150];
            Result[uint2(startX + i, startY + j)] = float4(1, 1, 1, value);
        }
}

[numthreads(400, 1, 1)]
void GetMask (uint3 id : SV_DispatchThreadID)
{
    uint w, h;
    Result.GetDimensions(w, h);

    //AddMask(id.x, boardIndexes[id.x]);
    //AddMask2();
    AddMask(0, 0);

}